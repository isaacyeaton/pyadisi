"""GUI for selecting points on iamges.
"""

import enaml.qt
from enaml.layout.api import vbox, hbox, spacer
from enaml.widgets.api import Window, Container, MPLCanvas, CheckBox, ComboBox, Slider


import numpy as np
import matplotlib.pyplot as plt
from scipy import ndimage

from skimage import filter
from skimage.exposure import adjust_gamma

from matplotlib import widgets
from matplotlib.image import AxesImage

import sys


img = plt.imread('bat_study/calibration/cam3.tif')


fig1, ax1 = plt.subplots()
p1 = ax1.imshow(img, interpolation='nearest', cmap=plt.cm.gray)
cursor = widgets.Cursor(ax1, useblit=True, color='red', linewidth=1)

fig2, ax2 = plt.subplots()
ax2.plot(np.random.normal(0, .5, 300), np.random.normal(1, .3, 300))

figures = {
    'one': fig1,
    'two': fig2,
}


plt.close('all')

## This is the one that works so far.


def agamma(artist, mouseevent):
    print('mouseevent: {0}'.format(mouseevent))

    xlim, ylim = ax2.get_xlim(), ax2.get_ylim()
    gamma = slider_gamma.val
    img_adj = adjust_gamma(img, gamma=gamma)

    p1.set_array(img_adj)
    p2.set_array(img_adj)
    ax2.set_xlim(xlim)
    ax2.set_ylim(ylim)
    fig.canvas.draw()

    return True, dict()

def on_button_press(event):
    if event.button == 1:
        global sub_img
        x, y = event.xdata, event.ydata
        idx = np.round(slider.val).astype(np.int)
        sub_img = img[y-idx:y+idx, x-idx:x+idx]

        # center of mass for the image
        com = ndimage.measurements.center_of_mass(sub_img)# > 100)
        xc = com[1] + x - idx
        yc = com[0] + y - idx

        #cm_plot.set_data((xc, yc))
        cm_plot.set_xdata(xc)
        cm_plot.set_ydata(yc)

        # update the small plot
        ax2.set_xlim(x-idx, x+idx)
        ax2.set_ylim(y+idx, y-idx)
        fig.canvas.draw()



if False:
  fig, ax1 = plt.subplots(figsize=(6, 8))

  fig.subplots_adjust(bottom=0.25)
  ax2 = plt.axes([0.7, 0.05, 0.15, 0.125])
  ax1.set_xticklabels([])
  ax1.set_yticklabels([])
  ax2.set_xticklabels([])
  ax2.set_yticklabels([])

  p1 = ax1.imshow(img, interpolation='nearest', cmap=plt.cm.gray)
  p2 = ax2.imshow(img, interpolation='nearest', cmap=plt.cm.gray)

  com = ndimage.measurements.center_of_mass(img)
  cm_plot, = ax2.plot(com[1], com[0], 'g+', ms=12, alpha=.95)
  ax2.axis('image')

  cursor = widgets.Cursor(ax1, useblit=True, color='red', linewidth=1)

  ax_slider = plt.axes([0.15, 0.15, 0.45, 0.02])
  slider = Slider(ax_slider, 'select', 2, 30, valinit=10, color='#AAAAAA')

  ax_gamma = plt.axes([.15, .075, 0.45, .02])
  slider_gamma = Slider(ax_gamma, 'gamma', 0, 2, valinit=1, color='#AAAAAA', picker=agamma)

  fig.canvas.mpl_connect('button_press_event', on_button_press);



enamldef Main(Window):
    Container:
        constraints = [
            vbox(
                hbox(cbox, check, spacer),
                hbox(slider, spacer),
                canvas,
            ),
            cbox.v_center == check.v_center,
        ]
        ComboBox: cbox:
            items = ['one', 'two']
            index = 0
        CheckBox: check:
            text = 'Toolbar Visible'
            checked := canvas.toolbar_visible
        Slider: slider:
            tick_interval = .05
            maximum = 2
            minimum = 0
        MPLCanvas: canvas:
            figure << figures[cbox.selected_item]
